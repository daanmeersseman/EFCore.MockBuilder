name: Publish NuGet Package

on:
  release:
    types: [published]   # Triggers the workflow whenever a release is published on GitHub

jobs:
  # Step 1: Prerelease Publication
  prerelease:
    runs-on: ubuntu-latest
    if: ${{ github.event.release.prerelease }}  # Run only if the release is marked as a pre-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Confirm file path
      run: ls -R
   
    - name: Restore dependencies
      run: dotnet restore EFCore.MockBuilder/EFCore.MockBuilder.csproj

    - name: Build
      run: dotnet build EFCore.MockBuilder/EFCore.MockBuilder.csproj --configuration Release 
   
    - name: Pack Prerelease
      run: dotnet pack EFCore.MockBuilder/EFCore.MockBuilder.csproj --configuration Release /p:PackageVersion=${{ github.event.release.tag_name }}-prerelease

    - name: Publish Prerelease to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push EFCore.MockBuilder/bin/Release/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json

  # Step 2: Production Release (manual approval required)
  release:
    runs-on: ubuntu-latest
    if: ${{ !github.event.release.prerelease }}  # Run only if the release is NOT marked as a pre-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Confirm file path
      run: ls -R

    - name: Restore dependencies
      run: dotnet restore EFCore.MockBuilder/EFCore.MockBuilder.csproj

    - name: Build
      run: dotnet build EFCore.MockBuilder/EFCore.MockBuilder.csproj --configuration Release 
   
    - name: Pack Prerelease
      run: dotnet pack EFCore.MockBuilder/EFCore.MockBuilder.csproj --configuration Release /p:PackageVersion=${{ github.event.release.tag_name }}

    - name: Publish Production Release to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push EFCore.MockBuilder/bin/Release/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json
